//
//  main.swift
//  R.swift
//
//  Created by Mathijs Kadijk on 11-12-14.
//  From: https://github.com/mac-cain13/R.swift
//  License: MIT License
//

import Foundation

let defaultFileManager = NSFileManager.defaultManager()
let findAllAssetsFolderURLsInDirectory = filterDirectoryContentsRecursively(defaultFileManager) { $0.isDirectory && $0.absoluteString!.pathExtension == "xcassets" }
let findAllNibURLsInDirectory = filterDirectoryContentsRecursively(defaultFileManager) { !$0.isDirectory && $0.absoluteString!.pathExtension == "xib" }
let findAllStoryboardURLsInDirectory = filterDirectoryContentsRecursively(defaultFileManager) { !$0.isDirectory && $0.absoluteString!.pathExtension == "storyboard" }

let Header = join("\n", [
    "// This is a generated file, do not edit!",
    "// Generated by R.swift, see https://github.com/mac-cain13/R.swift",
    "",
    "import UIKit",
    ""
  ])

inputDirectories(NSProcessInfo.processInfo())
  .each { directory in

    // Asset folders
    let assetFolders = findAllAssetsFolderURLsInDirectory(url: directory)
      .map { AssetFolder(url: $0, fileManager: defaultFileManager) }

    let imageStruct = imageStructFromAssetFolders(assetFolders)
    
    // Storyboards
    let storyboards = findAllStoryboardURLsInDirectory(url: directory)
      .map { Storyboard(url: $0) }

    let segueStruct = segueStructFromStoryboards(storyboards)

    let storyboardStruct = Struct(name: "storyboard", vars: [], functions: [], structs: storyboards.map(storyboardStructForStoryboard))
    
    let validateAllStoryboardsFunction = Function(isStatic: true, name: "validate", parameters: [], returnType: Type(className: "Void"), body: storyboards.map(swiftCallStoryboardValidators).reduce("", combine: +))

    // Nibs
    let nibs = findAllNibURLsInDirectory(url: directory)
      .map { Nib(url: $0) }
    let nibStruct = Struct(name: "nib", vars: [], functions: [], structs: nibs.map(nibStructForNib))

    // Write out the code
    let resourceStruct = Struct(name: "R", vars: [], functions: [validateAllStoryboardsFunction], structs: [imageStruct, segueStruct, storyboardStruct, nibStruct])
    writeResourceFile(Header + "\n" + resourceStruct.description, toFolderURL: directory)
    println(Header + "\n" + resourceStruct.description)
  }
